name: pytest darwin

on: [pull_request, workflow_dispatch]

env:
  PYTHONPATH: /Users/runner/work/g2-sdk-python-next/g2-sdk-python-next/src
  SENZING_TOOLS_DATABASE_URL: 'sqlite3://na:na@/tmp/sqlite/G2C.db'

permissions:
  contents: write
  pull-requests: write

jobs:
  pytest-darwin:
    continue-on-error: true
    name: 'pytest Senzing: ${{ matrix.senzingapi-version }}; OS: ${{ matrix.os }}; Python ${{ matrix.python-version }}'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]
        # python-version: ["3.8", "3.9", "3.10", "3.11"]
        python-version: ['3.8', '3.11']
        senzingapi-version: [production-v3]

    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install psutil pytest pytest-cov pytest-schema

      - if: matrix.python-version == '3.8' || matrix.python-version == '3.9'
        name: install python libraries for python 3.8 and 3.9
        run: pip install typing_extensions

      - name: install Senzing API
        uses: senzing-factory/github-action-install-senzing-api@v2
        with:
          senzingapi-version: ${{ matrix.senzingapi-version }}

      - name: copy /etc files
        run: sudo cp testdata/senzing-license/g2.lic /opt/senzing/g2/etc/g2.lic

      - name: copy test database files
        run: mkdir /tmp/sqlite && cp testdata/sqlite/G2C.db /tmp/sqlite/G2C.db

      - name: run pytest on tests
        continue-on-error: true
        run: |
          export DYLD_LIBRARY_PATH=/opt/senzing/g2/lib:/opt/senzing/g2/lib/macos
          pytest tests/ --verbose --capture=no --cov=src/senzing
          cp .coverage $COVERAGE_FILE
          ls -tlc

      - name: debug 
        env:
          COVERAGE_FILE: ".coverage.${{ matrix.python-version }}"
        run: |
          ls -al
          cp .coverage $COVERAGE_FILE

      # - name: Run pytest on examples
      #  run: |
      #    export DYLD_LIBRARY_PATH=/opt/senzing/g2/lib:/opt/senzing/g2/lib/macos
      #    pytest examples/ --verbose --capture=no

      - name: Store coverage file
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: .coverage.${{ matrix.python-version }}

  coverage:
    name: coverage
    runs-on: ubuntu-latest
    needs: pytest-darwin
    permissions:
      pull-requests: write
      contents: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        id: download
        with:
          pattern: coverage-*
          merge-multiple: true

      - name: Coverage comment
        id: coverage_comment
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MERGE_COVERAGE_FILES: true

      - name: Store Pull Request comment to be posted
        uses: actions/upload-artifact@v4
        if: steps.coverage_comment.outputs.COMMENT_FILE_WRITTEN == 'true'
        with:
          name: python-coverage-comment-action
          path: python-coverage-comment-action.txt